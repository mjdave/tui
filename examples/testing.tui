#testCommon = require("tests/testCommon.tui")
#assert = testCommon.assert
#getLineNumber = debug.getLineNumber

array = {
    "first"
    "second"
    "third"
}

keyed = {
    one = "first"
    two = "second"
    three = "third"
}

testFunc = function()
{
    /*for(key in array)
    {
        subTree = {
            key = key
        }
        print("for(key in array):", subTree)
    }

    for(index,object in array)
    {
        subTree = {
            index = index
            object = object
        }
        print("for(index,object in array):", subTree)
    }

    for(object in keyed)
    {
        subTree = {
            object = object 
        }
        print("for(object in keyed):", subTree)
    }

   for(key,object in keyed)
    {
        subTree = {
            key = key
            object = object
        }
        print("key,object in keyed:", subTree)
    }*/

    for(index = 0, index < 4, index++)
    {
        print("testIndex:", index)
        subTree = {
            index = index
        }
        print("testIndex subTree:", subTree)
    }
    
}

testFunc()

/*stringVar = "hello"

stLength = string.length(stringVar)

print("stLength (5):", stLength)

sub = string.subString(stringVar, 1,3) #ell
print("sub:", sub)

stringformat = string.format("float to 2 decimal places:%.2f integer:%d hex:%x", 1.2345, 5.78, 127)
print("stringformat:", stringformat)

testFunc1 = function()
{
    #todo playlistsHeader is nil second time
    #playlistsHeader = scene.getView("playlistsHeader")
    #settingsHeader = scene.getView("settingsHeader")
    #print("playlistsHeader:", playlistsHeader)
#
    #button.create(settingsButton, -0.1, function()
    #{
    #print("playlistsHeader:", playlistsHeader)
    #    playlistsHeader.hidden = true
    #    settingsHeader.hidden = false
    #})
}

testFunc1()
*/